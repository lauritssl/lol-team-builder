<!DOCTYPE html>
<html>
  <head>
    <title>League Of Bravery - Ultimate Bravery Team Builder</title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <meta name="fragment" content="!" />
    
    <!--  
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage 
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.
        
        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:
            
            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->
<!-- font awesome from BootstrapCDN -->
    <link href='http://fonts.googleapis.com/css?family=Milonga|Roboto:400,700,900' rel='stylesheet' type='text/css'>
    <link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css">
    

    <!--STYLES-->
    <link rel="stylesheet" href="/bower_components/angular-notify/dist/angular-notify.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <!--STYLES END-->

  </head>
 <base href="/">
  <body>
    <%- body %>






    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can 
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.
      
      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:
          
          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->
<script src="//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
    <!--SCRIPTS-->
    <script src="/bower_components/angular/angular.js"></script>
    <script src="/bower_components/angular-animate/angular-animate.js"></script>
    <script src="/bower_components/angular-cookies/angular-cookies.js"></script>
    <script src="/bower_components/angular-pmkr-components/build/components.js"></script>
    <script src="/bower_components/angular-cache/dist/angular-cache.js"></script>
    <script src="/bower_components/angular-bootstrap/ui-bootstrap-tpls.js"></script>
    <script src="/bower_components/angular-ui-router/release/angular-ui-router.js"></script>
    <script src="/bower_components/angular-ui-utils/ui-utils.js"></script>
    <script src="/bower_components/socket.io-client/dist/socket.io.min.js"></script>
    <script src="/bower_components/sails.io.js/dist/sails.io.js"></script>
    <script src="/bower_components/angular-sails/dist/angular-sails.js"></script>
    <script src="/bower_components/lodash/dist/lodash.js"></script>
    <script src="/bower_components/moment/moment.js"></script>
    <script src="/bower_components/angular-moment/angular-moment.js"></script>
    <script src="/bower_components/angular-translate/angular-translate.js"></script>
    <script src="/bower_components/angular-translate-loader-static-files/angular-translate-loader-static-files.js"></script>
    <script src="/bower_components/angular-audio/app/angular.audio.js"></script>
    <script src="/bower_components/angular-notify/dist/angular-notify.js"></script>
    <script src="/scripts/browser-selector.js"></script>
    <script src="/app/app.js"></script>
    <script src="/app/common/directives/index.js"></script>
    <script src="/app/common/directives/search.directive.js"></script>
    <script src="/app/common/models/Game.js"></script>
    <script src="/app/common/models/Message.js"></script>
    <script src="/app/common/models/User.js"></script>
    <script src="/app/common/models/index.js"></script>
    <script src="/app/common/services/config.js"></script>
    <script src="/app/common/services/index.js"></script>
    <script src="/app/common/services/lodash.js"></script>
    <script src="/app/common/services/notification.service.js"></script>
    <script src="/app/common/services/title.js"></script>
    <script src="/app/common/services/utils.js"></script>
    <script src="/app/gamelobby/controllers/createModal.controller.js"></script>
    <script src="/app/gamelobby/controllers/enterModal.controller.js"></script>
    <script src="/app/gamelobby/controllers/gameLobbyController.js"></script>
    <script src="/app/gamelobby/gameLobbyModule.js"></script>
    <script src="/app/gamelobby/services/championService.js"></script>
    <script src="/app/gamelobby/services/gamelobby.service.js"></script>
    <script src="/app/header/controllers/headerController.js"></script>
    <script src="/app/header/headerModule.js"></script>
    <script src="/app/home/controllers/homeController.js"></script>
    <script src="/app/mainController.js"></script>
    <!--SCRIPTS END-->

    
    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).
        
        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    <script type="text/javascript" src="/templates.js"></script>
    <!--TEMPLATES END-->

    <!-- CUSTOM SCRIPTS -->
    <!-- <script src="/scripts/prefixfree.js" type="text/javascript"></script>  -->
  </body>
</html>
